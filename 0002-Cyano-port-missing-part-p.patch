From 70c8f563621fd0c32b02f8bcaa432a1a30ad228e Mon Sep 17 00:00:00 2001
From: Daniel Tjandra <danieltjandra@gmail.com>
Date: Sat, 7 Feb 2015 19:41:53 -0500
Subject: [PATCH] Cyano-port missing part :-p

Change-Id: Id570502b70cfeda2c7993578fae471e9d77704dd
---
 src/org/omnirom/omnigears/ButtonSettings.java | 20 ++++++++++----------
 1 file changed, 10 insertions(+), 10 deletions(-)

diff --git a/src/org/omnirom/omnigears/ButtonSettings.java b/src/org/omnirom/omnigears/ButtonSettings.java
index da2ddd9..b0fc1b1 100644
--- a/src/org/omnirom/omnigears/ButtonSettings.java
+++ b/src/org/omnirom/omnigears/ButtonSettings.java
@@ -76,7 +76,7 @@ public class ButtonSettings extends SettingsPreferenceFragment implements OnPref
     private static final String BUTTON_HOME_WAKE = "button_home_wake_screen";
     private static final String BUTTON_HOME_ANSWERS_CALL = "button_home_answers_call";
 //    private static final String BUTTON_VOLUME_DEFAULT = "button_volume_default_screen";
-//    private static final String BUTTON_VOLUME_MUSIC_CONTROL = "button_volume_music_control";
+    private static final String BUTTON_VOLUME_MUSIC_CONTROL = "button_volume_music_control";
 //    private static final String VOLUME_KEY_CURSOR_CONTROL = "volume_key_cursor_control";
     private static final String SWAP_VOLUME_BUTTONS = "swap_volume_buttons";
 //    private static final String CATEGORY_HEADSETHOOK = "button_headsethook";
@@ -127,7 +127,7 @@ public class ButtonSettings extends SettingsPreferenceFragment implements OnPref
     private CheckBoxPreference mVolumeWake;
     private CheckBoxPreference mHomeWake;
     private CheckBoxPreference mHomeAnswerCall;
-//    private CheckBoxPreference mVolumeMusicControl;
+    private CheckBoxPreference mVolumeMusicControl;
     private CheckBoxPreference mSwapVolumeButtons;
 //    private ListPreference mVolumeKeyCursorControl;
     private SwitchPreference mEnableCustomBindings;
@@ -191,9 +191,9 @@ public class ButtonSettings extends SettingsPreferenceFragment implements OnPref
 //          mVolumeDefault.setValue(Integer.toString(currentDefault));
 //          mVolumeDefault.setOnPreferenceChangeListener(this);
 //
-//          mVolumeMusicControl = (CheckBoxPreference) findPreference(BUTTON_VOLUME_MUSIC_CONTROL);
-//          mVolumeMusicControl.setChecked(Settings.System.getInt(resolver,
-//                  Settings.System.VOLUME_MUSIC_CONTROL, 0) != 0);
+          mVolumeMusicControl = (CheckBoxPreference) findPreference(BUTTON_VOLUME_MUSIC_CONTROL);
+          mVolumeMusicControl.setChecked(Settings.System.getInt(resolver,
+                  Settings.System.VOLBTN_MUSIC_CONTROLS, 0) != 0);
 //
             mSwapVolumeButtons = (CheckBoxPreference) findPreference(SWAP_VOLUME_BUTTONS);
             mSwapVolumeButtons.setChecked(Settings.System.getInt(resolver,
@@ -484,11 +484,11 @@ public class ButtonSettings extends SettingsPreferenceFragment implements OnPref
 //            Settings.System.putInt(getContentResolver(),
 //                    Settings.System.VIRTUAL_KEYS_HAPTIC_FEEDBACK, checked ? 1:0);
 //            return true;
-//        } else if (preference == mVolumeMusicControl) {
-//            boolean checked = ((CheckBoxPreference)preference).isChecked();
-//            Settings.System.putInt(getActivity().getContentResolver(),
-//                    Settings.System.VOLUME_MUSIC_CONTROL, checked ? 1:0);
-//            return true;
+        } else if (preference == mVolumeMusicControl) {
+            boolean checked = ((CheckBoxPreference)preference).isChecked();
+            Settings.System.putInt(getActivity().getContentResolver(),
+                    Settings.System.VOLBTN_MUSIC_CONTROLS, checked ? 1:0);
+            return true;
 //        } else if (preference == mForceShowOverflowMenu) {
 //            boolean checked = ((CheckBoxPreference)preference).isChecked();
 //            Settings.System.putInt(getContentResolver(),
-- 
2.1.0

